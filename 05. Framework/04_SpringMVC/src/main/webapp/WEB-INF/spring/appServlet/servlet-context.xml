<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
		 	▲ @Controller 어노테이션을 붙여서 MVC Controller 를 Bean 객체로 만들고
		 	  url 을 매핑하면 됨 
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
		 	▼ mapping 속성에 해당하는 요청에 대해,
		 	  location 속성에 지정 된 디렉터리(폴더)로 매핑시킨다는 뜻
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
		 	▼ 사용자로 부터 /js/jquery-3.6.0.js 라는 요청이 오면 
		 	  이것을 /resources/js/jquery-3.6.0.js로 매핑시킨다는 뜻
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<resources mapping="/js/**" location="/resources/js/" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kh.mvc" />
	
	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
	<annotation-driven />, <context:component-scan base-package="com.kh.mvc" />을 사용하지 않을 경우 
	아래와 같이 HandlerMapping과 Controller를 명시적으로 bean으로 등록해야 한다.
	
	각 요청을 수행할 Controller들의 클래스를 빈으로 등록하고
	<beans:bean id="loginController" class="com.kh.spring.member.controller.LoginController"/>
	<beans:bean id="logoutController" class="com.kh.spring.member.controller.LogoutController"/>
	
	HandlerMapping에 각각의 Controller들을 매핑해야 한다.	
	<beans:bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<beans:property name="mappings">
			<beans:props>
				<beans:prop key="login.me">loginController</beans:prop>
				<beans:prop key="logout.me">logoutController</beans:prop>						
			</beans:props>
		</beans:property>
	</beans:bean>
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ --> 
	
	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
		[ DB 관련 설정 ] 
		root-context.xml 에서 import 하는 mybatis-context.xml 에 작성했지만, 
		<tx:annotation-driven /> 은 실제 트랜색션을 적용할 Bean 들이 등록되는
		ApplicationContext 설정 파일에 작성해야 함
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ --> 
<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>


	<!-- ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
		[ 인터셉터 설정 ] 
			- 인터셉터가 웹 관련 설정이기 때문에, root-context.xml 이 아닌 servlet-context.xml 에 작성
	ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ --> 
	<interceptors>
		<interceptor>
			<!-- ▼ 인터셉터를 적용시킬 요청 (컨트롤러) 선택 
			<mapping path="/member/myPage" />
			<mapping path="/member/update" />
			
			[ 와일드카드 /*, /** 의 차이점 ]
				1) /member/*
					- /member/insert       ▷ 적용됨
					- /member/udpate       ▷ 적용됨
					- /member/insert/10    ▷ 적용안됨 !!
					- /member/udpate/user  ▷ 적용안됨 !!
				
				2)/member/**
					- /member/insert       ▷ 적용됨
					- /member/udpate       ▷ 적용됨
					- /member/insert/10    ▷ 적용됨
					- /member/udpate/user  ▷ 적용됨
			-->
			
			<!-- ▼ /member 로 시작하는 url 의 모든 요청에 대해 인터셉터 적용 -->
			<mapping path="/member/**" />
			<mapping path="/board/write" />
			<mapping path="/board/update" />
			<mapping path="/board/delete" />
			<!-- <mapping path="/board/view" /> -->
			
			<!-- ▼ 인터셉터를 제외시킬 요청(컨트롤러) 선택 -->
			<exclude-mapping path="/member/enroll" />
			<exclude-mapping path="/member/idCheck" />
			
			<!-- ▼ 인터셉터 등록 -->
			<beans:bean id="loginCheckInterceptor" class="com.kh.mvc.common.interceptor.LoginCheckInterceptor" />
		</interceptor>
	</interceptors>
</beans:beans>
